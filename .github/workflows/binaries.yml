name: binaries
on:
  workflow_dispatch:
  push:
    # Don't run on version tags (these are used for JS module).
    tags-ignore:
      - 'v**'
    branches:
      - '**'
    paths:
      - .github/workflows/binaries.yml
      - patches/*
      - scripts/*
  pull_request:


env:
  ALPINE_BRANCH: v3.18
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  JOBS: 1
  CFLAGS: -Os -fomit-frame-pointer -pipe
  WIN32_LDFLAGS: -Wl,--as-needed -Wl,-Map,linker.map
  # List of extra nginx modules to download
  NGINX_MODULES_WIN32: >-
    vision5/ngx_devel_kit
    openresty/echo-nginx-module
    openresty/headers-more-nginx-module
    openresty/set-misc-nginx-module
    chobits/ngx_http_proxy_connect_module
  # Don't update binaries with unchanged sources.
  SKIP_SAME_SOURCES: true

jobs:
  nginx-x86_64-win32:
    name: nginx-${{ matrix.NGINX_VERSION }}-x86_64-win32
    runs-on: windows-latest
    permissions:
      contents: write
    strategy:
      matrix:
        NGINX_VERSION:
          - 1.26.x
    steps:
      - name: Setup MSYS2 and install packages
        uses: msys2/setup-msys2@v2
        with:
          update: false
          install: base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-jq

      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          path: master

      - name: Download and extract nginx
        shell: msys2 {0}
        run: ./master/scripts/fetch-sources -d . nginx/nginx@release-${{ matrix.NGINX_VERSION }}

      - name: Download and extract nginx MSYS2 patches
        shell: msys2 {0}
        run: ./master/scripts/fetch-sources -d msys2 "myfreeer/nginx-build-msys2@1.22.0"

      - name: Download ngx_http_proxy_connect_module patches
        shell: msys2 {0}
        run: curl -L -o msys2/proxy_connect_rewrite_102101.patch 'https://raw.githubusercontent.com/chobits/ngx_http_proxy_connect_module/master/patch/proxy_connect_rewrite_102101.patch'
        
      - name: Download and extract nginx modules
        shell: msys2 {0}
        run: ./master/scripts/fetch-sources $NGINX_MODULES_WIN32

      - name: Download and extract libraries
        shell: msys2 {0}
        run: ./master/scripts/fetch-sources 'openssl@3.3.x' 'pcre@8.x' 'madler/zlib@v1.3.x'

      - name: Apply patches
        shell: msys2 {0}
        run: |
          patch -p1 < msys2/nginx-0007-logs-write-access-log-to-stderr.patch
          patch -p1 < msys2/proxy_connect_rewrite_102101.patch

      - name: Build nginx
        shell: msys2 {0}
        env:
          NGINX_MODULES: ${{ env.NGINX_MODULES_WIN32 }}
          # -DFD_SETSIZE=1024 is per official nginx win32 binary.
          CFLAGS: ${{ env.CFLAGS }} -DFD_SETSIZE=1024
          LDFLAGS: ${{ env.WIN32_LDFLAGS }}
        run: ./master/scripts/build-nginx

      - name: Upload nginx binary to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nginx-${{ matrix.NGINX_VERSION }}-x86_64-win32
          path: artifact/*

      - name: release
        uses: ncipollo/release-action@v1
        with:
          commit: "${$GITHUB_SHA}"
          artifacts: "artifact/*"

        

